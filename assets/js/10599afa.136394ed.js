"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[968],{4137:(n,t,e)=>{e.d(t,{Zo:()=>m,kt:()=>d});var a=e(7294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function o(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function p(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?o(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)e=o[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)e=o[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var i=a.createContext({}),s=function(n){var t=a.useContext(i),e=t;return n&&(e="function"==typeof n?n(t):p(p({},t),n)),e},m=function(n){var t=s(n.components);return a.createElement(i.Provider,{value:t},n.children)},u="mdxType",c={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,o=n.originalType,i=n.parentName,m=l(n,["components","mdxType","originalType","parentName"]),u=s(e),f=r,d=u["".concat(i,".").concat(f)]||u[f]||c[f]||o;return e?a.createElement(d,p(p({ref:t},m),{},{components:e})):a.createElement(d,p({ref:t},m))}));function d(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var o=e.length,p=new Array(o);p[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=n,l[u]="string"==typeof n?n:r,p[1]=l;for(var s=2;s<o;s++)p[s]=e[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,e)}f.displayName="MDXCreateElement"},160:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=e(7462),r=(e(7294),e(4137));const o={title:"map in python",author:"stavis",description:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u0432 \u043f\u0438\u0442\u043e\u043d\u0435",tags:["functions","map"]},p="\u0424\u0443\u043d\u043a\u0446\u0438\u044f map",l={unversionedId:"python/functions/map",id:"python/functions/map",title:"map in python",description:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u0432 \u043f\u0438\u0442\u043e\u043d\u0435",source:"@site/docs/python/functions/map.md",sourceDirName:"python/functions",slug:"/python/functions/map",permalink:"/python/functions/map",draft:!1,editUrl:"https://github.com/stavis-dev/stavis-dev.github.io/tree/main/docs/python/functions/map.md",tags:[{label:"functions",permalink:"/tags/functions"},{label:"map",permalink:"/tags/map"}],version:"current",lastUpdatedBy:"Stavis",lastUpdatedAt:1690632438,formattedLastUpdatedAt:"29 \u0438\u044e\u043b. 2023 \u0433.",frontMatter:{title:"map in python",author:"stavis",description:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u0432 \u043f\u0438\u0442\u043e\u043d\u0435",tags:["functions","map"]},sidebar:"tutorialSidebar",previous:{title:"lambda in python",permalink:"/python/functions/lambda"},next:{title:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f sorted \u0432 python",permalink:"/python/functions/python-sorted"}},i={},s=[{value:"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u0430:",id:"\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f-\u0432-\u0447\u0438\u0441\u043b\u0430",level:2},{value:"List comprehension \u0432\u043c\u0435\u0441\u0442\u043e map",id:"list-comprehension-\u0432\u043c\u0435\u0441\u0442\u043e-map",level:2},{value:"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u0430:",id:"\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f-\u0432-\u0447\u0438\u0441\u043b\u0430-1",level:2}],m={toc:s},u="wrapper";function c(n){let{components:t,...e}=n;return(0,r.kt)(u,(0,a.Z)({},m,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u0444\u0443\u043d\u043a\u0446\u0438\u044f-map"},"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map"),(0,r.kt)("p",null,"\u0424\u0443\u043d\u043a\u0446\u0438\u044f map \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438\n\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438."),(0,r.kt)("p",null,"\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e map \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n\u041f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n    In [1]: list_of_words = ['one', 'two', 'list', '', 'dict']\n\n    In [2]: map(str.upper, list_of_words)\n    Out[2]: <map at 0xb45eb7ec>\n\n    In [3]: list(map(str.upper, list_of_words))\n    Out[3]: ['ONE', 'TWO', 'LIST', '', 'DICT']\n")),(0,r.kt)("admonition",{title:":",type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},'str.upper("aaa")')," \u0434\u0435\u043b\u0430\u0435\u0442 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0447\u0442\u043e ",(0,r.kt)("inlineCode",{parentName:"p"},'"aaa".upper()'),".")),(0,r.kt)("h2",{id:"\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f-\u0432-\u0447\u0438\u0441\u043b\u0430"},"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u0430:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n    In [3]: list_of_str = ['1', '2', '5', '10']\n\n    In [4]: list(map(int, list_of_str))\n    Out[4]: [1, 2, 5, 10]\n")),(0,r.kt)("p",null,"\u0412\u043c\u0435\u0441\u0442\u0435 \u0441 map \u0443\u0434\u043e\u0431\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u044f\u043c\u0431\u0434\u0430-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n    In [5]: vlans = [100, 110, 150, 200, 201, 202]\n\n    In [6]: list(map(lambda x: 'vlan {}'.format(x), vlans))\n    Out[6]: ['vlan 100', 'vlan 110', 'vlan 150', 'vlan 200', 'vlan 201', 'vlan 202']\n")),(0,r.kt)("p",null,"\u0415\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 map(), \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0434\u0432\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u0442\u043e\n\u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0434\u0432\u0430 \u0441\u043f\u0438\u0441\u043a\u0430:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n    In [7]: nums = [1, 2, 3, 4, 5]\n\n    In [8]: nums2 = [100, 200, 300, 400, 500]\n\n    In [9]: list(map(lambda x, y: x*y, nums, nums2))\n    Out[9]: [100, 400, 900, 1600, 2500]\n")),(0,r.kt)("h2",{id:"list-comprehension-\u0432\u043c\u0435\u0441\u0442\u043e-map"},"List comprehension \u0432\u043c\u0435\u0441\u0442\u043e map"),(0,r.kt)("p",null,"\u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u0432\u043c\u0435\u0441\u0442\u043e map \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c ",(0,r.kt)("a",{parentName:"p",href:"/python/functions/x_comprehensions"},"list comprehension"),". \u0427\u0430\u0449\u0435\n\u0432\u0441\u0435\u0433\u043e, \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0441 ",(0,r.kt)("inlineCode",{parentName:"p"},"list comprehension")," \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439, \u0430 \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445\n\u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u0434\u0430\u0436\u0435 \u0431\u044b\u0441\u0442\u0440\u0435\u0435."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/1247490"},"\u041e\u0442\u0432\u0435\u0442")," Alex Martelli \u0441\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435\u043c map \u0438 list comprehension"),(0,r.kt)("p",null,"\u041d\u043e map \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0435\u0439 \u0432 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u0434\u043e \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n\u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0442\u0430\u043a \u043a\u0430\u043a map - \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440, \u0430 list\ncomprehension \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a."),(0,r.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440\u044b, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u043c \u0432\u044b\u0448\u0435, \u0432 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0435 \u0441 list comprehension."),(0,r.kt)("p",null,"\u041f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n    In [48]: list_of_words = ['one', 'two', 'list', '', 'dict']\n\n    In [49]: [word.upper() for word in list_of_words]\n    Out[49]: ['ONE', 'TWO', 'LIST', '', 'DICT']\n")),(0,r.kt)("h2",{id:"\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f-\u0432-\u0447\u0438\u0441\u043b\u0430-1"},"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u0430:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n    In [50]: list_of_str = ['1', '2', '5', '10']\n\n    In [51]: [int(i) for i in list_of_str]\n    Out[51]: [1, 2, 5, 10]\n")),(0,r.kt)("p",null,"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n    In [52]:  vlans = [100, 110, 150, 200, 201, 202]\n\n    In [53]: [f'vlan {x}' for x in vlans]\n    Out[53]: ['vlan 100', 'vlan 110', 'vlan 150', 'vlan 200', 'vlan 201', 'vlan 202']\n")),(0,r.kt)("p",null,"\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f zip:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n    In [54]: nums = [1, 2, 3, 4, 5]\n\n    In [55]: nums2 = [100, 200, 300, 400, 500]\n\n    In [56]: [x * y for x, y in zip(nums, nums2)]\n    Out[56]: [100, 400, 900, 1600, 2500]\n")))}c.isMDXComponent=!0}}]);