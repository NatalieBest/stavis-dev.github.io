"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3065],{4137:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>y});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),o=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=o(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=o(t),m=a,y=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return t?r.createElement(y,i(i({ref:n},u),{},{components:t})):r.createElement(y,i({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=m;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[c]="string"==typeof e?e:a,i[1]=p;for(var o=2;o<l;o++)i[o]=t[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7992:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var r=t(7462),a=(t(7294),t(4137));const l={sidebar_label:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438",author:"Stavis",title:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 python",description:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0443\u0447\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0432 \u0441\u0432\u043e\u0435\u043c \u043a\u043e\u0434\u0435 python",tags:["best","python"]},i="Python \u043b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438",p={unversionedId:"python/best-practices-python",id:"python/best-practices-python",title:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 python",description:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0443\u0447\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0432 \u0441\u0432\u043e\u0435\u043c \u043a\u043e\u0434\u0435 python",source:"@site/docs/python/best-practices-python.md",sourceDirName:"python",slug:"/python/best-practices-python",permalink:"/python/best-practices-python",draft:!1,editUrl:"https://github.com/stavis-dev/stavis-dev.github.io/tree/main/docs/python/best-practices-python.md",tags:[{label:"best",permalink:"/tags/best"},{label:"python",permalink:"/tags/python"}],version:"current",lastUpdatedBy:"Stavis",lastUpdatedAt:1692710939,formattedLastUpdatedAt:"22 \u0430\u0432\u0433. 2023 \u0433.",frontMatter:{sidebar_label:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438",author:"Stavis",title:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 python",description:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0443\u0447\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0432 \u0441\u0432\u043e\u0435\u043c \u043a\u043e\u0434\u0435 python",tags:["best","python"]},sidebar:"pythonSidebar",previous:{title:"\u043c\u043e\u0434\u0443\u043b\u044c selenium python",permalink:"/python/modules/selenium-python"},next:{title:"\u0414\u0430\u0442\u0430\u043a\u043b\u0430\u0441\u0441\u044b",permalink:"/python/dataclasses"}},s={},o=[{value:"list - \u0441\u043f\u0438\u0441\u043a\u0438",id:"list---\u0441\u043f\u0438\u0441\u043a\u0438",level:2},{value:"\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 (\u043c\u0430\u0441\u0441\u0438\u0432\u0430)",id:"\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u0441\u043f\u0438\u0441\u043a\u0430-\u043c\u0430\u0441\u0441\u0438\u0432\u0430",level:3},{value:"\u0420\u0435\u0432\u0435\u0440\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 (\u043c\u0430\u0441\u0441\u0438\u0432\u0430)",id:"\u0440\u0435\u0432\u0435\u0440\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u0441\u043f\u0438\u0441\u043a\u0430-\u043c\u0430\u0441\u0441\u0438\u0432\u0430",level:3},{value:"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430",id:"\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435-\u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432-\u0438\u0437-\u0441\u043f\u0438\u0441\u043a\u0430",level:3},{value:"Enumerate: \u0432\u043c\u0435\u0441\u0442\u043e range(len(array))",id:"enumerate-\u0432\u043c\u0435\u0441\u0442\u043e-rangelenarray",level:2},{value:"\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u043a\u0430",id:"\u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u043a\u0430",level:2},{value:"Date",id:"date",level:2},{value:"if else",id:"if-else",level:2},{value:"\u041c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 <code>or</code>",id:"\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439-or",level:3},{value:"\u0411\u0443\u043b\u0438\u0435\u0432\u044b\u0439 <code>if</code>",id:"\u0431\u0443\u043b\u0438\u0435\u0432\u044b\u0439-if",level:3},{value:"\u0418\u0437\u0431\u044b\u0442\u043e\u043a if",id:"\u0438\u0437\u0431\u044b\u0442\u043e\u043a-if",level:3},{value:"\u041c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 map",id:"\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f-\u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f-\u0447\u0435\u0440\u0435\u0437-map",level:2},{value:"\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432",id:"\u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435-\u0442\u0438\u043f\u043e\u0432",level:2},{value:"str to tuple / list",id:"str-to-tuple--list",level:3}],u={toc:o},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"python-\u043b\u0443\u0447\u0448\u0438\u0435-\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438"},"Python \u043b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438"),(0,a.kt)("h2",{id:"list---\u0441\u043f\u0438\u0441\u043a\u0438"},"list - \u0441\u043f\u0438\u0441\u043a\u0438"),(0,a.kt)("h3",{id:"\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u0441\u043f\u0438\u0441\u043a\u0430-\u043c\u0430\u0441\u0441\u0438\u0432\u0430"},"\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 (\u043c\u0430\u0441\u0441\u0438\u0432\u0430)"),(0,a.kt)("p",null,"\u0427\u0435\u0440\u0435\u0437 \u0441\u043b\u0430\u0439\u0441\u044b."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"numbers = [1, 2, 3]\ncopy_numbers = numbers[:]\n")),(0,a.kt)("h3",{id:"\u0440\u0435\u0432\u0435\u0440\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u0441\u043f\u0438\u0441\u043a\u0430-\u043c\u0430\u0441\u0441\u0438\u0432\u0430"},"\u0420\u0435\u0432\u0435\u0440\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 (\u043c\u0430\u0441\u0441\u0438\u0432\u0430)"),(0,a.kt)("p",null,"\u0447\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0440\u0435\u0437 \u0432\u0438\u0434\u0430 ","[::-1]","  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"arr = [1, 2, 3, 4, 5, 6]\narr[::-1]\n#[6, 5, 4, 3, 2, 1]\n")),(0,a.kt)("h3",{id:"\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435-\u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432-\u0438\u0437-\u0441\u043f\u0438\u0441\u043a\u0430"},"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430"),(0,a.kt)("p",null,"\u041f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u043c \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c ",(0,a.kt)("a",{parentName:"p",href:"/python/types/python-types-list"},"list")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"my_list = [1, 6, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4]\n")),(0,a.kt)("p",null,"\u0417\u0430\u0434\u0430\u0447\u0430 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n\u0421\u0430\u043c\u044b\u0439 \u0442\u0440\u0438\u0432\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434, \u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u0440\u0438\u0445\u043e\u0434\u044f\u0449\u0438\u0439 \u043d\u0430 \u0443\u043c - \u043f\u0440\u043e\u0433\u043d\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 ",(0,a.kt)("a",{parentName:"p",href:"/python/types/python-types-set"},"set")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"my_list = list(set(my_list))\n")),(0,a.kt)("p",null,"\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435\u0442 \u0442\u0438\u043f ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u0432 ",(0,a.kt)("inlineCode",{parentName:"p"},"set"),", \u0432 \u043d\u0435\u043c \u043f\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432\n\u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0445\u0435\u0448-set. \u041d\u043e \u0435\u0441\u0442\u044c \u043d\u044e\u0430\u043d\u0441 - \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u043d\u0434\u043e\u043c\u043d\u044b\u0439."),(0,a.kt)("p",null,"\u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0435\u0441\u043b\u0438 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e \u0443\u0434\u0430\u043b\u0438\u0432 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b?"),(0,a.kt)("p",null,"\u0415\u0441\u043b\u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n\u0421\u0430\u043c\u044b\u0439 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0438 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"list(dict.fromkeys(seq))\n")),(0,a.kt)("p",null,"\u0421\u0430\u043c\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u043c\u0435\u0442\u043e\u0434, \u0447\u0443\u0442\u044c \u0441\u043b\u043e\u0436\u043d\u0435\u0439 \u0434\u043b\u044f \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u044f:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"def uniq_nums(seq):\n    uniq = set()\n    uniq_add = uniq.add\n    return [item for item in seq if not item in uniq and not uniq_add(item)]\n")),(0,a.kt)("p",null,"\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0432\u0430\u0436\u043d\u043e \u0432 \u043a\u0430\u043a\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"list(set(seq))\n")),(0,a.kt)("h2",{id:"enumerate-\u0432\u043c\u0435\u0441\u0442\u043e-rangelenarray"},"Enumerate: \u0432\u043c\u0435\u0441\u0442\u043e range(len(array))"),(0,a.kt)("p",null,"\u0412\u044b \u0435\u0449\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 ",(0,a.kt)("inlineCode",{parentName:"p"},"for i in range(len(array))")," \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c \u043a \u0434\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439?",(0,a.kt)("br",{parentName:"p"}),"\n","\u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 ",(0,a.kt)("inlineCode",{parentName:"p"},"enumerate"),". \u042d\u0442\u043e \u0434\u0430\u0435\u0442 \u0442\u043e\u0442 \u0436\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u043d\u043e \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u0435\u0439."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"arr = ['a', 'b', 'c', 'd', 'e']\n\n# Instead of this\nfor i in range(len(arr)):\n    print(i, arr[i])\n\n# 0 a\n# 1 b\n# 2 c\n# 3 d\n# 4 e\n\n\n# Use this\nfor i, val in enumerate(arr):\n    print(i, val)\n\n# 0 a\n# 1 b\n# 2 c\n# 3 d\n# 4 e\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u0435 \u043d\u0430 ",(0,a.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/learnpython/comments/nn0il2/rangelens_vs_enumerate/"},"reddit.com")," \u043f\u043e\u0447\u0435\u043c\u0443 ",(0,a.kt)("inlineCode",{parentName:"li"},"enumerate")," \u043b\u0443\u0447\u0448\u0435.")),(0,a.kt)("h2",{id:"\u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u043a\u0430"},"\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u043a\u0430"),(0,a.kt)("p",null,"\u0411\u0435\u0437 \u0437\u0430\u043c\u043e\u0440\u043e\u0447\u0435\u043a, \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043a\u0438 / \u043a\u043e\u0440\u0442\u0435\u0436\u0438 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"# \u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0443\u043f\u043b\u0430\ntpl = ('bla-bla', 1, 2, 3, 4, 'a', 'b')\n\n# \u0447\u0430\u0441\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430\n# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 (\u043f\u0435\u0440\u0432\u044b\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0432 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439)\n*_, a, b = tpl\n\na, b\n\n# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\na, *_, b = tpl\n\na, b\n\n# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 2 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\na, b, *_ = tpl\n\na, b\n")),(0,a.kt)("h2",{id:"date"},"Date"),(0,a.kt)("p",null,"\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u044b \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u043a\u043e\u0434\u0435 \u0447\u0435\u0440\u0435\u0437 f-\u0441\u0442\u0440\u043e\u043a\u0443"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from datetime import datetime\n\ntoday = datetime.now()\n\n# only day\nprint(f'{today:%Y-%m-%d}')\n# 2023-01-10\n\n# day n time\nprint(f'{today:%Y-%m-%d %H:%M:%S}')\n# 2023-01-10 23:06:48\n\n# old way\n# today.strftime('%Y-%m-%d')\n# 2013-09-18\n")),(0,a.kt)("h2",{id:"if-else"},"if else"),(0,a.kt)("h3",{id:"\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439-or"},"\u041c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 ",(0,a.kt)("inlineCode",{parentName:"h3"},"or")),(0,a.kt)("p",null,"\u043f\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"name = 'Alex'\nif name == 'John', or name == 'Steeve' or name == 'Bill':\n    print(name)\n\nif name in ('John', 'Steeve', 'Bill'):\n    print(name)\n")),(0,a.kt)("h3",{id:"\u0431\u0443\u043b\u0438\u0435\u0432\u044b\u0439-if"},"\u0411\u0443\u043b\u0438\u0435\u0432\u044b\u0439 ",(0,a.kt)("inlineCode",{parentName:"h3"},"if")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"a = b = d = c = e = True\nif a and b and c and d and e:\n    print('All is True')\n\nif all((a, b, c, d, e)): print('All is True')\n\n# \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0434\u043b\u044f (\u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u043d\u043e\u0433\u043e)\nif any((a, b, c, d, e)): print('Any is True')\n")),(0,a.kt)("h3",{id:"\u0438\u0437\u0431\u044b\u0442\u043e\u043a-if"},"\u0418\u0437\u0431\u044b\u0442\u043e\u043a if"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},'class User:\n    def __init__(self, group: str):\n        self.group = group\n\nuser = User(group="admin")\n\n# \u043d\u0435\u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0445\u043e\u0442\u044f \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\nif user.group == "admin":\n    process_admin_recuest(user, request)\nelif user.group == "manager":\n    process_manager_recuest(user, request)\nelif user.group == "client":\n    process_client_recuest(user, request)\n\n# \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e \u043f\u043e\u0447\u0435\u043c\u0443 \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439 \u0432\u0430\u0440\u0438\u043a\ngroup_to_process = {\n    \'admin\': process_admin_recuest,\n    \'manager\': process_manager_recuest,\n    \'client\': process_client_recuest,\n}\ngroup_to_process[user.group](user, request)\n')),(0,a.kt)("h2",{id:"\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f-\u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f-\u0447\u0435\u0440\u0435\u0437-map"},"\u041c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 map"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"# \u043f\u0440\u043e\u0433\u043e\u043d x, y, z \u0447\u0435\u0440\u0435\u0437 map \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u044f \u0438\u0445 \u0432 \u0438\u043d\u0442\u044b.\nx, y, z = map(int, (x, y, z))\n")),(0,a.kt)("h2",{id:"\u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435-\u0442\u0438\u043f\u043e\u0432"},"\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432"),(0,a.kt)("h3",{id:"str-to-tuple--list"},"str to tuple / list"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"sites_urls = \"some.url, second.com, third.com\"\n\nif isinstance(sites_urls, str):\n      sites_urls = tuple(sites_urls.split(', '))\n      print(sites_urls)\n")))}d.isMDXComponent=!0}}]);